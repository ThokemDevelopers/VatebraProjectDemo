// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VatClinic.Data;

namespace VatClinic.Data.Migrations
{
    [DbContext(typeof(VatClinicDbContext))]
    partial class VatClinicDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("VatClinic.Data.Entities.Administer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("ContractAilmentId");

                    b.Property<long?>("ContractPatientId");

                    b.Property<long?>("ResolveAilmentId");

                    b.Property<long?>("ResolveMedicationId");

                    b.HasKey("Id");

                    b.HasIndex("ContractPatientId", "ContractAilmentId");

                    b.HasIndex("ResolveMedicationId", "ResolveAilmentId");

                    b.ToTable("Administers");
                });

            modelBuilder.Entity("VatClinic.Data.Entities.Ailment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.Property<string>("Symtoms")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Ailments");
                });

            modelBuilder.Entity("VatClinic.Data.Entities.Contract", b =>
                {
                    b.Property<long>("PatientId");

                    b.Property<long>("AilmentId");

                    b.Property<int?>("AilmentId1");

                    b.Property<int?>("PatientId1");

                    b.HasKey("PatientId", "AilmentId");

                    b.HasIndex("AilmentId1");

                    b.HasIndex("PatientId1");

                    b.ToTable("Contracts");
                });

            modelBuilder.Entity("VatClinic.Data.Entities.Medication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<string>("Doses")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Medications");
                });

            modelBuilder.Entity("VatClinic.Data.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age");

                    b.Property<string>("ClinicNo")
                        .IsRequired()
                        .HasMaxLength(10);

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime>("DateUpdated");

                    b.Property<int>("Name")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("VatClinic.Data.Entities.Resolve", b =>
                {
                    b.Property<long>("MedicationId");

                    b.Property<long>("AilmentId");

                    b.Property<int?>("AilmentId1");

                    b.Property<int?>("MedicationId1");

                    b.HasKey("MedicationId", "AilmentId");

                    b.HasIndex("AilmentId1");

                    b.HasIndex("MedicationId1");

                    b.ToTable("Resolves");
                });

            modelBuilder.Entity("VatClinic.Data.Entities.Administer", b =>
                {
                    b.HasOne("VatClinic.Data.Entities.Contract", "Contract")
                        .WithMany()
                        .HasForeignKey("ContractPatientId", "ContractAilmentId");

                    b.HasOne("VatClinic.Data.Entities.Resolve", "Resolve")
                        .WithMany()
                        .HasForeignKey("ResolveMedicationId", "ResolveAilmentId");
                });

            modelBuilder.Entity("VatClinic.Data.Entities.Contract", b =>
                {
                    b.HasOne("VatClinic.Data.Entities.Ailment", "Ailment")
                        .WithMany("Contracts")
                        .HasForeignKey("AilmentId1");

                    b.HasOne("VatClinic.Data.Entities.Patient", "Patient")
                        .WithMany("Contracts")
                        .HasForeignKey("PatientId1");
                });

            modelBuilder.Entity("VatClinic.Data.Entities.Resolve", b =>
                {
                    b.HasOne("VatClinic.Data.Entities.Ailment", "Ailment")
                        .WithMany("Resolves")
                        .HasForeignKey("AilmentId1");

                    b.HasOne("VatClinic.Data.Entities.Medication", "Medication")
                        .WithMany("Resolves")
                        .HasForeignKey("MedicationId1");
                });
#pragma warning restore 612, 618
        }
    }
}
